AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     1


MACRO ASSEMBLER AX51 V2.11
OBJECT MODULE PLACED IN INSTALL.OBJ
ASSEMBLER INVOKED BY: d:\dev\keilc\C51\BIN\AX51.EXE INSTALL.A51 SET(SMALL) DEBUG EP

LOC    OBJ             LINE     SOURCE

                          1     $title  ('Configuration for MONITOR-51   (C) 1987-2003 KEIL')
                          2     ;***********************************************************************
                          3     ;*                                                                     *
                          4     ;* MONITOR 8051  Configuration                                         *
                          5     ;* COPYRIGHT KEIL ELEKTRONIK GmbH 1987 - 2003                          *
                          6     ;*                                                                     *
                          7     ;* written by:     RK  11.06.1987                                      *
                          8     ;* updated by:     RK  23.10.1989                                      *
                          9     ;* updated by:     HS  02.09.1991                                      *
                         10     ;* updated by:     HS  11.04.1995                                      *
                         11     ;* updated by:     HS  07.09.1997                                      *
                         12     ;* updated by:     HS  14.03.2003  Flash download added                *
                         13     ;*                                                                     *
                         14     ;*                                                                     *
                         15     ;***********************************************************************
                         16     
                         17     
                         18     NAME    CONFIG
                         19     
                         20     ;$include (CONFIG.INC)
                    +1   21     ;------------------------------------------------------------------------------
                    +1   22     ;  This file defines the Monitor Configuration Parameters
                    +1   23     ;  Copyright KEIL ELEKTRONIK GmbH 1993 - 2003
                    +1   24     ;  Monitor-51 Version 4.00
                    +1   25     ;------------------------------------------------------------------------------
                    +1   26     ;
                    +1   27     ; Definitions of Monitor Parameters
                    +1   28     ; ---------------------------------
                    +1   29     ;
                    +1   30     ; XDATA_START: Defines the start address for the Monitor XDATA area
                    +1   31     ;              Monitor-51 uses 256 Bytes RAM starting at this location.
 0600               +1   32     XDATA_START   EQU  0600H     ; default Monitor data area 0x0300 .. 0x03FF
                    +1   33                                  ; _XRS must be 4 if XDATA_START is greater than 0300H
                    +1   34     
                    +1   35     ; CODE_START: Defines the Start Address for the Monitor Code Area
                    +1   36     ;             Monitor requires 4KB for program code starting at this location.
 E000               +1   37     CODE_START    EQU  0E000H    ; default Monitor code area 0x7000 .. 0x7FFF
                    +1   38     
                    +1   39     ; INT_ADR_OFF: Defines the Interrupt Vector Address relocation 
                    +1   40     ; Notes: This setting is ONLY relevant, if CODE_START is 0.  You must locate the 
                    +1   41     ;        interrupts of your target application to the same address with uVision2
                    +1   42     ;        'Options for Target'->'C51'->'Interrupt vectors at address'.
                    +1   43     ;        (generates the L51 VECTAB directive).
 0000               +1   44     INT_ADR_OFF   EQU  00000H    ; default interrupt vector relocation is 0x0000
                    +1   45     
                    +1   46     ; DEF_PC_VAL: Program counter value after start
                    +1   47     ; Notes: When CODE_START is set to 0 you should set DEF_PC_VAL to the beginning
                    +1   48     ;        of the application code area.  This is typically the start of the v.Neumann
                    +1   49     ;        wired RAM area.
 0000               +1   50     DEF_PC_VAL    EQU  00000H    ; reset value of program counter after monitor start
                    +1   51     
                    +1   52     ; SERIAL: Defines the UART and the baudrategenerator
 0001               +1   53     SERIAL        EQU  1         ; 0 = on-chip UART with timer1 as baudrategenerator
                    +1   54                                  ; 1 = on-chip UART with timer2 as baudrategenerator
                    +1   55                                  ; 2 = on-chip UART with dedicated baudrategenerator
                    +1   56                                  ; 3 = use external UART (see EX_UART_CLK and EX_UART_ADR)
                    +1   57     
                    +1   58     ; BAUDRATE: Defines the communication baudrate.
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     2

                    +1   59     ; Note: You may set BAUDRATE to 0 to enable automatic baudrate detection.
                    +1   60     ;       Automatic baudrate detection does not work for an external UART (SERIAL=3).
 0000               +1   61     BAUDRATE      EQU  0         ; default Baudrate is 9600 bps.
                    +1   62     
                    +1   63     ; EX_UART_CLK: Oscillator/crystal frequency of external UART
                    +1   64     ; Note: This setting is only relevant when an external UART is selected (SERIAL=3)
 001C2000           +1   65     EX_UART_CLK   EQU  1843200   ; clock for external UART
                    +1   66     
                    +1   67     ; EX_UART_ADR: XDATA memory address of external UART
                    +1   68     ; Note: This setting is only relevant when an external UART is selected (SERIAL=3)
 E700               +1   69     EX_UART_ADR   EQU  0E700H    ; XDATA address of external UART
                    +1   70     
                    +1   71     ; CPU_CLOCK: Defines the CPU Clock frequency (external oscillator/crystal)
 016E3600           +1   72     CPU_CLOCK     EQU  24000000  ; default clock for most chips is 24MHz
                    +1   73     
                    +1   74     ; CPU_X2:  Specifies if CPU runs in X2 mode.
                    +1   75     ; Note: This does not set the CPU into X2 mode. CPU_X2 must be set according to the 
                    +1   76     ;       X2 bit of the hardware security byte (HSB).
 0000               +1   77     CPU_X2        EQU  0         ; selects a 12 cycle CPU
                    +1   78                                  ; selects a 6 cycle CPU
                    +1   79     
                    +1   80     
                    +1   81     ; Definitions for AUXR Register:
                    +1   82     ; ------------------------------
                    +1   83     
                    +1   84     ; AO: ALE Output Bit (AUXR.0):
 0001               +1   85     _AO           EQU  1         ; 0 = ALE is emitted at a constant rate of 1/6 of the 
                    +1   86                                  ;     oscillator frequency (or 1/3 if X2 mode is used)
                    +1   87                                  ; 1 = ALE is active only during a MOVX or MOVC instruction
                    +1   88     
                    +1   89     ; EXTRAM: EXTRAM Bit (AUXR.1):
                    +1   90     ; Note: The on-chip XDATA RAM must be enabled in the hardware security byte (HSB).
 0000               +1   91     _EXTRAM       EQU  0         ; 0 = access internal XRAM using movx @Ri / @DPTR 
                    +1   92                                  ; 1 = access external memory
                    +1   93     
                    +1   94     ; XRS: on-chip XRAM size (AUXR.2 .. AUXR.4):
 0004               +1   95     _XRS          EQU  4         ; 0 =  256 bytes
                    +1   96                                  ; 1 =  512 bytes
                    +1   97                                  ; 2 =  768 bytes
                    +1   98                                  ; 3 = 1024 bytes
                    +1   99                                  ; 4 = 1792 bytes (AT89C51RD2 only)
                    +1  100     
                    +1  101     ; M0: Pulse Length (AUXR.5):
 0000               +1  102     _M0           EQU  0         ; 0 = RD and the WR pulse length is 6 clock periods (defaul
                               t).
                    +1  103                                  ; 1 = RD and the WR pulse length is 30 clock periods
                    +1  104     ;------------------------------------------------------------------------------
 0011               +1  105     _AUXR   EQU (_AO) OR (_EXTRAM SHL 1) OR (_XRS SHL 2) OR (_M0 SHL 5)
                    +1  106     
                    +1  107     
                    +1  108     ; Definitions for FLASH programming:
                    +1  109     ; ----------------------------------
                    +1  110     
                    +1  111     ; FLASH_PAGESIZE: Defines the flash page size. uVision does not send data blocks that 
                    +1  112     ;                 cross this boundary. Must be set to 0 if flash programming is not used
 0080               +1  113     FLASH_PAGESIZE EQU 128       ; flash page size
                    +1  114     
                    +1  115     ; FLASH_MAXBYTES: Defines the max. number of bytes which can be loaded into one 
                    +1  116     ;                 flash page before the page is programmed.  This is a workaround for
                    +1  117     ;                 a chip problem in some Atmel devices. 
 0080               +1  118     FLASH_MAXBYTES EQU 128       ; max number of bytes to load in one flash page
                    +1  119     
                    +1  120     
                    +1  121     
                    +1  122     
                    +1  123     
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     3

                    +1  124     
                    +1  125     
                        126     
                        127     ;#include <89c51rd2.H>
                    +1  128     
                    +1  129     
                    +1  130     
                    +1  131     
                    +1  132     
                    +1  133     
                    +1  134     
                    +1  135     
                    +1  136     
                    +1  137     
                    +1  138     
  0080              +1  139     sfr  P0      =   0x80;                   
                    +1  140     
0080.7              +1  141     sbit  P0_7    =   P0^7;
0080.6              +1  142     sbit  P0_6    =   P0^6;
0080.5              +1  143     sbit  P0_5    =   P0^5;
0080.4              +1  144     sbit  P0_4    =   P0^4;
0080.3              +1  145     sbit  P0_3    =   P0^3;
0080.2              +1  146     sbit  P0_2    =   P0^2;
0080.1              +1  147     sbit  P0_1    =   P0^1;
0080.0              +1  148     sbit  P0_0    =   P0^0;
                    +1  149     
  0081              +1  150     sfr  SP      =   0x81;
  0082              +1  151     sfr  DPL     =   0x82;
  0083              +1  152     sfr  DPH     =   0x83;
                    +1  153     
  0087              +1  154     sfr  PCON    =   0x87;                   
                    +1  155     
  0088              +1  156     sfr  TCON    =   0x88;             
                    +1  157     
0088.7              +1  158     sbit  TF1    =   TCON^7;
0088.6              +1  159     sbit  TR1    =   TCON^6;
0088.5              +1  160     sbit  TF0    =   TCON^5;
0088.4              +1  161     sbit  TR0    =   TCON^4;
0088.3              +1  162     sbit  IE1_   =   TCON^3;
0088.2              +1  163     sbit  IT1    =   TCON^2;
0088.1              +1  164     sbit  IE0_   =   TCON^1;
0088.0              +1  165     sbit  IT0    =   TCON^0;
                    +1  166     
  0089              +1  167     sfr  TMOD    =   0x89;                   
                    +1  168     
  008A              +1  169     sfr  TL0     =   0x8A;                   
                    +1  170     
  008B              +1  171     sfr  TL1     =   0x8B;                   
                    +1  172     
  008C              +1  173     sfr  TH0     =   0x8C;                   
                    +1  174     
  008D              +1  175     sfr  TH1     =   0x8D;                   
                    +1  176     
  008F              +1  177     sfr  CKCON      =   0x8F;                        
                    +1  178     
                    +1  179     
  0090              +1  180     sfr  P1      =   0x90;                   
                    +1  181     
0090.7              +1  182     sbit  P1_7    =   P1^7;
0090.6              +1  183     sbit  P1_6    =   P1^6;
0090.5              +1  184     sbit  P1_5    =   P1^5;
0090.4              +1  185     sbit  P1_4    =   P1^4;
0090.3              +1  186     sbit  P1_3    =   P1^3;
0090.2              +1  187     sbit  P1_2    =   P1^2;
0090.1              +1  188     sbit  P1_1    =   P1^1;
0090.0              +1  189     sbit  P1_0    =   P1^0;
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     4

                    +1  190     
0090.7              +1  191     sbit  CEX4    =   P1^7;
0090.6              +1  192     sbit  CEX3    =   P1^6;
0090.5              +1  193     sbit  CEX2    =   P1^5;
0090.4              +1  194     sbit  CEX1    =   P1^4;
0090.3              +1  195     sbit  CEX0    =   P1^3;
0090.2              +1  196     sbit  ECI     =   P1^2;
0090.1              +1  197     sbit  T2EX    =   P1^1;
0090.0              +1  198     sbit  T2      =   P1^0;
                    +1  199     
  0098              +1  200     sfr  SCON    =   0x98;                   
                    +1  201     
  00C0              +1  202     sfr  SCON_1    =   0xC0;                         
                    +1  203     
0098.7              +1  204     sbit  SM0    =   SCON^7;
0098.7              +1  205     sbit  FE     =   SCON^7;
0098.6              +1  206     sbit  SM1    =   SCON^6;
0098.5              +1  207     sbit  SM2    =   SCON^5;
0098.4              +1  208     sbit  REN    =   SCON^4;
0098.3              +1  209     sbit  TB8    =   SCON^3;
0098.2              +1  210     sbit  RB8    =   SCON^2;
0098.1              +1  211     sbit  TI     =   SCON^1;
0098.0              +1  212     sbit  RI     =   SCON^0;
                    +1  213     
  0099              +1  214     sfr  SBUF    =   0x99;                   
                    +1  215     
  00C1              +1  216     sfr  SBUF_1  =   0xC1;             
                    +1  217     
  009A              +1  218     sfr  BRL  =     0x9A;                
                    +1  219     
  00A0              +1  220     sfr  P2      =   0xA0;                   
                    +1  221     
00A0.7              +1  222     sbit  P2_7    =   P2^7;
00A0.6              +1  223     sbit  P2_6    =   P2^6;
00A0.5              +1  224     sbit  P2_5    =   P2^5;
00A0.4              +1  225     sbit  P2_4    =   P2^4;
00A0.3              +1  226     sbit  P2_3    =   P2^3;
00A0.2              +1  227     sbit  P2_2    =   P2^2;
00A0.1              +1  228     sbit  P2_1    =   P2^1;
00A0.0              +1  229     sbit  P2_0    =   P2^0;
                    +1  230     
  00A6              +1  231     sfr  WDTRST  =   0xA6;                   
  00A7              +1  232     sfr  WDTPRG  =   0xA7;                   
                    +1  233     
  00A2              +1  234     sfr  AUXR1  =   0xA2;              
                    +1  235     
  00A8              +1  236     sfr  IE     =   0xA8;                        
  00A8              +1  237     sfr  IE0    =   0xA8;
                    +1  238     
00A8.7              +1  239     sbit  EA     =   IE^7;
00A8.6              +1  240     sbit  EC     =   IE^6;
00A8.5              +1  241     sbit  ET2    =   IE^5;
00A8.4              +1  242     sbit  ES     =   IE^4;
00A8.3              +1  243     sbit  ET1    =   IE^3;
00A8.2              +1  244     sbit  EX1    =   IE^2;
00A8.1              +1  245     sbit  ET0    =   IE^1;
00A8.0              +1  246     sbit  EX0    =   IE^0;
                    +1  247     
  00A9              +1  248     sfr  SADDR   =   0xA9;                   
                    +1  249     
                    +1  250     
  00AA              +1  251     sfr  SADDR_1   =   0xAA;                         
                    +1  252     
  00B0              +1  253     sfr  P3      =   0xB0;                   
                    +1  254     
00B0.7              +1  255     sbit  P3_7    =   P3^7;
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     5

00B0.6              +1  256     sbit  P3_6    =   P3^6;
00B0.5              +1  257     sbit  P3_5    =   P3^5;
00B0.4              +1  258     sbit  P3_4    =   P3^4;
00B0.3              +1  259     sbit  P3_3    =   P3^3;
00B0.2              +1  260     sbit  P3_2    =   P3^2;
00B0.1              +1  261     sbit  P3_1    =   P3^1;
00B0.0              +1  262     sbit  P3_0    =   P3^0;
                    +1  263     
00B0.7              +1  264     sbit  RD      =   P3^7;
00B0.6              +1  265     sbit  WR      =   P3^6;
00B0.5              +1  266     sbit  T1      =   P3^5;
00B0.4              +1  267     sbit  T0      =   P3^4;
00B0.3              +1  268     sbit  INT1    =   P3^3;
00B0.2              +1  269     sbit  INT0    =   P3^2;
00B0.1              +1  270     sbit  TXD     =   P3^1;
00B0.0              +1  271     sbit  RXD     =   P3^0;
                    +1  272     
                    +1  273     
  008E              +1  274     sfr  AUXR    =   0x8E;                   
                    +1  275     
  00B9              +1  276     sfr  SADEN   =   0xB9;                   
                    +1  277     
  00BA              +1  278     sfr  SADEN_1 =   0xBA;                    
                    +1  279     
  00B7              +1  280     sfr  IPH     =   0xB7;                       
  00B7              +1  281     sfr  IPH0    =   0xB7;
                    +1  282     
  00B8              +1  283     sfr  IPL     =   0xB8;                       
  00B8              +1  284     sfr  IPL0    =   0xB8;  
                    +1  285     
00B8.6              +1  286     sbit PPC  = IPL^6;
00B8.5              +1  287     sbit PT2  = IPL^5;
00B8.4              +1  288     sbit PS   = IPL^4;
00B8.3              +1  289     sbit PT1  = IPL^3;
00B8.2              +1  290     sbit PX1  = IPL^2;
00B8.1              +1  291     sbit PT0  = IPL^1;
00B8.0              +1  292     sbit PX0  = IPL^0;
                    +1  293     
  00C8              +1  294     sfr  T2CON   =   0xC8;             
                    +1  295     
00C8.7              +1  296     sbit  TF2    =   T2CON^7;
00C8.6              +1  297     sbit  EXF2   =   T2CON^6;
00C8.5              +1  298     sbit  RCLK   =   T2CON^5;
00C8.4              +1  299     sbit  TCLK   =   T2CON^4;
00C8.3              +1  300     sbit  EXEN2  =   T2CON^3;
00C8.2              +1  301     sbit  TR2    =   T2CON^2;
00C8.1              +1  302     sbit  CT2    =   T2CON^1;
00C8.0              +1  303     sbit  CPRL2  =   T2CON^0;
                    +1  304     
  00C9              +1  305     sfr  T2MOD   =   0xC9;                   
                    +1  306     
  00CA              +1  307     sfr  RCAP2L  =   0xCA;                   
  00CB              +1  308     sfr  RCAP2H  =   0xCB;                   
  00CC              +1  309     sfr  TL2     =   0xCC;                   
  00CD              +1  310     sfr  TH2     =   0xCD;                   
                    +1  311     
  009B              +1  312     sfr  BDRCON  =   0x9B;                   
                    +1  313     
  009C              +1  314     sfr  BDRCON_1  =   0x9C;                         
                    +1  315     
                    +1  316     
  00D0              +1  317     sfr  PSW     =   0xD0;                   
00D0.7              +1  318     sbit  CY     =   PSW^7;
00D0.6              +1  319     sbit  AC     =   PSW^6;
00D0.5              +1  320     sbit  F0     =   PSW^5;
00D0.4              +1  321     sbit  RS1    =   PSW^4;
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     6

00D0.3              +1  322     sbit  RS0    =   PSW^3;
00D0.2              +1  323     sbit  OV     =   PSW^2;
00D0.1              +1  324     sbit  UD     =   PSW^1;
00D0.0              +1  325     sbit  P      =   PSW^0;
                    +1  326     
  00D8              +1  327     sfr  CCON    =   0xD8;                   
                    +1  328     
00D8.7              +1  329     sbit  CF      =   CCON^7;
00D8.6              +1  330     sbit  CR      =   CCON^6;
00D8.4              +1  331     sbit  CCF4    =   CCON^4;
00D8.3              +1  332     sbit  CCF3    =   CCON^3;
00D8.2              +1  333     sbit  CCF2    =   CCON^2;
00D8.1              +1  334     sbit  CCF1    =   CCON^1;
00D8.0              +1  335     sbit  CCF0    =   CCON^0;
                    +1  336     
  00D9              +1  337     sfr  CMOD    =   0xD9;                   
                    +1  338     
  00DA              +1  339     sfr  CCAPM0  =   0xDA;                   
  00DB              +1  340     sfr  CCAPM1  =   0xDB;                   
  00DC              +1  341     sfr  CCAPM2  =   0xDC;                   
  00DD              +1  342     sfr  CCAPM3  =   0xDD;                   
  00DE              +1  343     sfr  CCAPM4  =   0xDE;                   
                    +1  344     
  00E9              +1  345     sfr  CL      =   0xE9;                   
                    +1  346     
  00EA              +1  347     sfr  CCAP0L  =   0xEA;                   
                    +1  348     
  00EB              +1  349     sfr  CCAP1L  =   0xEB;                   
                    +1  350     
  00EC              +1  351     sfr  CCAP2L  =   0xEC;                   
                    +1  352     
  00ED              +1  353     sfr  CCAP3L  =   0xED;                   
                    +1  354     
  00EE              +1  355     sfr  CCAP4L  =   0xEE;                   
                    +1  356     
  00E0              +1  357     sfr  ACC     =   0xE0;                   
  00F0              +1  358     sfr  B       =   0xF0;                   
                    +1  359     
  00F9              +1  360     sfr  CH      =   0xF9;                   
                    +1  361     
  00FA              +1  362     sfr  CCAP0H  =   0xFA;                   
  00FB              +1  363     sfr  CCAP1H  =   0xFB;                    
  00FC              +1  364     sfr  CCAP2H  =   0xFC;                   
  00FD              +1  365     sfr  CCAP3H  =   0xFD;                   
  00FE              +1  366     sfr  CCAP4H  =   0xFE;                   
                    +1  367     
  00FF              +1  368     sfr  ICON  =   0xFF;               
  0085              +1  369     sfr  CKSEL  =   0x85;               
  0086              +1  370     sfr  OSCCON  =   0x86;               
                    +1  371     
  00D1              +1  372     sfr FCON        = 0xD1;
  00D2              +1  373     sfr EECON       = 0xD2;
  00D3              +1  374     sfr EETIM       = 0xD3;
                    +1  375     
                    +1  376     
                    +1  377     
                    +1  378     
                        379     
                        380     
                        381     PUBLIC  INCHAR          ; CHARACTER INPUT-ROUTINE 
                        382     PUBLIC  OUTCHAR         ; CHARACTER OUTPUT-ROUTINE 
                        383     PUBLIC  INSTAT          ; INPUT STATUS OF SERIAL INTERFACE
                        384     PUBLIC  OUTSTAT         ; OUTPUT STATUS OF SERIAL INTERFACE
                        385     PUBLIC  CLR_TI          ; CLEAR SERIAL TRANSMIT INTERRUPT FLAG
                        386     PUBLIC  SET_TI          ; SET SERIAL TRANSMIT INTERRUPT FLAG
                        387     PUBLIC  CLR_RI          ; CLEAR SERIAL RECEIVE INTERRUPT FLAG
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     7

                        388     PUBLIC  CLR_SER_IE      ; CLEAR SERIAL INTERRUPT ENABLE FLAG
                        389     PUBLIC  SET_SER_IE      ; SET SERIAL INTERRUPT ENABLE FLAG
                        390     PUBLIC  SER_INT_ADR     ; ADDRESS OF SERIAL INTERRUPT VECTOR
                        391     PUBLIC  SER_INT_ADR_OFF ; ADDRESS OF SERIAL INTERRUPT VECTOR + INT_ADR_OFF
                        392     PUBLIC  BEFORE_GO       ; DO SOME THINGS BEFORE STARTING USER PROGRAM
                        393     PUBLIC  AFTER_GO        ; DO SOME THINGS AFTER TERMINATION OF USER PROGRAM
                        394     PUBLIC  DEF_PC_VAL      ; DEFAULT PC VALUE AFTER START UP
                        395     PUBLIC  WR_CODE         ; WRITE CODE BYTE
                        396     PUBLIC  PRE_PROG        ; Prepare for Flash programming
                        397     PUBLIC  LD_FPAGE        ; Load Flash Page
                        398     PUBLIC  POST_PROG       ; Finish Flash programming
                        399     PUBLIC  CODE_START_ADR  ; Monitor code start address
                        400     PUBLIC  FLASH_PAGESIZE  ; flash page size
                        401     PUBLIC  FLASH_MAXBYTES  ; max number of bytes to load in one flash page 
                        402                             ; before programming (workaround for chip bug)
                        403     PUBLIC  XDATA_START_ADR ; start of xdata area used by Monitor-51
                        404     PUBLIC  EXECBUFF        ; Buffer for SFR access and single step
                        405     EXTRN   CODE (MON51)    ; START OF MONITOR-51
                        406     EXTRN   CODE (SER_ISR)  ; SERIAL INTERRUPT SERVICE ROUTINE
                        407     
                        408     
                        409     USING 0
                        410     
00E000                  411     INITSEG SEGMENT CODE AT CODE_START
------                  412                     RSEG    INITSEG
00E000 020000     F     413     CODE_START_ADR: LJMP    InitSerial
                        414     IF (CODE_START = 0)     ; generate interrupt relocation table only when 
                                                LJMP    INT_ADR_OFF + 0x03
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 0BH
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 13H
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 1BH
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                IF ((SERIAL = 0) OR (SERIAL = 1) OR (SERIAL = 2))
                                                LJMP    INT_ADR_OFF + 23H
                                ELSE
                                                LJMP    SER_ISR
                                ENDIF
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 2BH
                                                NOP
                                                NOP
                                                NOP
                                                NOP
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     8

                                                NOP
                                                LJMP    INT_ADR_OFF + 33H
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 3BH
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 43H
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                NOP
                                                LJMP    INT_ADR_OFF + 4BH
                                ENDIF
                        475     
                        476     
------                  477     INSTALLCODE     SEGMENT CODE
------                  478                     RSEG INSTALLCODE
                        479     
                        480     
                        481     IF (SERIAL = 0)
                                ;********************************************************************
                                ;*  Using TIMER 1 to Generate Baud Rates                            *
                                ;********************************************************************
                                
                                InitSerial:
                                IF (BAUDRATE = 0)                       ; when baudrate=0 calculate timer reload value
                                                CLR     TR1             ; based on the received 0x11 character from uVis
                               ion
                                                CLR     TF1
                                                CLR     A
                                                MOV     TL1,A
                                                MOV     TH1,A
                                                MOV     TMOD,#010H
                                L4:             JB      RXD,L4          ; wait for start bit (negative edge)
                                L6:             JNB     RXD,L6          ; wait for end of start bit (positive edge)
                                L7:             SETB    TR1             ; start timer
                                L8:             JNB     RXD,L10         ; wait until end of first bit
                                                JNB     TF1,L8          ; or timer overflow
                                L10:            JNB     RXD,L10         ; wait for bit 5 (high-bit)
                                L12:            JNB     RXD,L14         ; wait until end of bit 5
                                                JNB     TF1,L12         ; or timer overflow
                                L14:            JNB     RXD,L14         ; wait until stop bit
                                L15:            CLR     TR1
                                                JB      TF1,InitSerial
                                                MOV     R7,TL1
                                                MOV     R6,TH1
                                
                                                MOV     A,R7
                                                ADD     A,#040H         ; add 64 for rounding
                                                MOV     R7,A
                                                CLR     A
                                                ADDC    A,R6
                                                MOV     R6,A
                                
                                                MOV     A,R7            ; divide by 128
                                                RLC     A
                                                MOV     A,R6
                                                RLC     A
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE     9

                                                MOV     R7,A
                                                CLR     C
                                                CLR     A
                                                SUBB    A,R7
                                                MOV     TH1,A
                                                CLR     A
                                                MOV     TL1,A
                                                MOV     TMOD,#00100000B ; C/T = 0, Mode = 2
                                                SETB    TR1             ; start timer
                                                ORL     PCON,#080H      ; set SMOD1 to double baudrate
                                                MOV     SCON,#01011010B ; Init Serial Interface
                                
                                L16:            CLR     RI
                                                JNB     RI,$            ; wait for next character
                                                MOV     A,SBUF
                                                CJNE    A,#011H,L16     ; is it a 0x11?
                                ELSE
                                IF (CPU_X2 = 1)
                                DIVFACTOR       EQU     6*BAUDRATE*16
                                ELSE
                                DIVFACTOR       EQU     12*BAUDRATE*16
                                ENDIF
                                TH1REL          EQU     100H-((CPU_CLOCK+(DIVFACTOR/2))/DIVFACTOR)
                                
                                                MOV     TMOD,#00100000B ;C/T = 0, Mode = 2
                                                MOV     TH1,#TH1REL
                                                ORL     PCON,#080H      ; set SMOD1 to double baudrate
                                                SETB    TR1             ; start timer
                                                MOV     SCON,#01011010B ; Init Serial Interface
                                ENDIF
                                                MOV     AUXR,#_AUXR     ; Configure T89C51RC2
                                                JMP     Mon51
                                ENDIF
                        552     
                        553     IF (SERIAL = 1)
                        554     ;********************************************************************
                        555     ;*  Using TIMER 2 to Generate Baud Rates                            *
                        556     ;********************************************************************
                        557     
000000                  558     InitSerial:
                        559     IF (BAUDRATE = 0)                       ; when baudrate=0 calculate timer reload value
000000 E4               560                     CLR     A
000001 F5CB             561                     MOV     RCAP2H,A
000003 F5CA             562                     MOV     RCAP2L,A
000005 F5CC             563                     MOV     TL2,A
000007 F5CD             564                     MOV     TH2,A
000009 F5C9             565                     MOV     T2MOD,A
00000B F5C8             566                     MOV     T2CON,A
00000D 20B0FD           567     L4:             JB      RXD,L4
000010 30B0FD           568     L6:             JNB     RXD,L6
000013 D2CA             569     L7:             SETB    TR2
000015 30B003           570     L8:             JNB     RXD,L10
000018 30CFFA           571                     JNB     TF2,L8
00001B 30B0FD           572     L10:            JNB     RXD,L10
00001E 30B003           573     L12:            JNB     RXD,L14
000021 30CFFA           574                     JNB     TF2,L12
000024 30B0FD           575     L14:            JNB     RXD,L14
000027 C2CA             576     L15:            CLR     TR2
000029 20CFD4           577                     JB      TF2,InitSerial
00002C AFCC             578                     MOV     R7,TL2
00002E AECD             579                     MOV     R6,TH2
                        580     
000030 EE               581                     MOV     A,R6
000031 C3               582                     CLR     C
000032 13               583                     RRC     A
000033 FC               584                     MOV     R4,A
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    10

000034 EF               585                     MOV     A,R7
000035 13               586                     RRC     A
000036 2F               587                     ADD     A,R7
000037 FF               588                     MOV     R7,A
000038 EC               589                     MOV     A,R4
000039 3E               590                     ADDC    A,R6
00003A FE               591                     MOV     R6,A
                        592     
00003B EF               593                     MOV     A,R7
00003C 2410             594                     ADD     A,#010H
00003E FF               595                     MOV     R7,A
00003F E4               596                     CLR     A
000040 3E               597                     ADDC    A,R6
000041 FE               598                     MOV     R6,A
                        599     
000042 EF               600                     MOV     A,R7
000043 7805             601                     MOV     R0,#05H
000045 CE               602     L22:            XCH     A,R6
000046 C3               603                     CLR     C
000047 13               604                     RRC     A
000048 CE               605                     XCH     A,R6
000049 13               606                     RRC     A
00004A D8F9             607                     DJNZ    R0,L22
00004C FF               608                     MOV     R7,A
00004D C3               609                     CLR     C
00004E E4               610                     CLR     A
00004F 9F               611                     SUBB    A,R7
000050 F5CA             612                     MOV     RCAP2L,A
000052 F5CC             613                     MOV     TL2,A
000054 E4               614                     CLR     A
000055 9E               615                     SUBB    A,R6
000056 F5CB             616                     MOV     RCAP2H,A
000058 F5CD             617                     MOV     TH2,A
                        618     
00005A 75C834           619                     MOV     T2CON,#034H
00005D 75985A           620                     MOV     SCON,#05AH
000060 C298             621     L16:            CLR     RI
000062 3098FD           622                     JNB     RI,$
000065 E599             623                     MOV     A,SBUF
000067 B411F6           624                     CJNE    A,#011H,L16
                        625     ELSE                                    ; fixed baudrate
                                IF (CPU_X2 = 1)
                                DIVFACTOR       EQU     BAUDRATE*16
                                ELSE
                                DIVFACTOR       EQU     BAUDRATE*32
                                ENDIF
                                T2REL           EQU     10000H-((CPU_CLOCK+(DIVFACTOR/2))/DIVFACTOR)
                                
                                                MOV     RCAP2H,#HIGH(T2REL)
                                                MOV     TH2,#HIGH(T2REL)
                                                MOV     RCAP2L,#LOW(T2REL)
                                                MOV     TL2,#LOW(T2REL)
                                                MOV     T2CON,#34H      ; set RCLK/TCLK/TR2
                                                MOV     SCON,#01011010B ; Init Serial Interface
                                ENDIF
00006A 758E11           640                     MOV     AUXR,#_AUXR     ; Configure T89C51RC2
00006D 020000     E     641                     JMP     Mon51
                        642     ENDIF
                        643     
                        644     
                        645     IF (SERIAL = 2)
                                ;********************************************************************
                                ;*  Using dedicated Baudrategenerator to generate baudrates         *
                                ;********************************************************************
                                
                                InitSerial:
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    11

                                IF (BAUDRATE = 0)                       ; when baudrate=0 calculate timer reload value
                                                CLR     A
                                                MOV     RCAP2H,A
                                                MOV     RCAP2L,A
                                                MOV     TL2,A
                                                MOV     TH2,A
                                                MOV     T2MOD,A
                                                MOV     T2CON,A
                                L4:             JB      RXD,L4
                                L6:             JNB     RXD,L6
                                L7:             SETB    TR2
                                L8:             JNB     RXD,L10
                                                JNB     TF2,L8
                                L10:            JNB     RXD,L10
                                L12:            JNB     RXD,L14
                                                JNB     TF2,L12
                                L14:            JNB     RXD,L14
                                L15:            CLR     TR2
                                                JB      TF2,InitSerial
                                                MOV     R7,TL2
                                                MOV     R6,TH2
                                
                                                MOV     A,R6
                                                CLR     C
                                                RRC     A
                                                MOV     R4,A
                                                MOV     A,R7
                                                RRC     A
                                                ADD     A,R7
                                                MOV     R7,A
                                                MOV     A,R4
                                                ADDC    A,R6
                                                MOV     R6,A
                                
                                                MOV     A,R7
                                                ADD     A,#010H
                                                MOV     R7,A
                                                CLR     A
                                                ADDC    A,R6
                                                MOV     R6,A
                                
                                                MOV     A,R7
                                                MOV     R0,#05H
                                L22:            XCH     A,R6
                                                CLR     C
                                                RRC     A
                                                XCH     A,R6
                                                RRC     A
                                                DJNZ    R0,L22
                                                MOV     R7,A
                                                CLR     C
                                                CLR     A
                                                SUBB    A,R7
                                                MOV     BRL,A
                                                CLR     A
                                                MOV     TL2,A
                                                MOV     TH2,A
                                                MOV     T2MOD,A
                                                MOV     T2CON,A
                                
                                                ORL     PCON,#080H      ; set SMOD1 to double baudrate
                                                MOV     BDRCON,#01EH    ; set TBCK/RBCK/BRR/SPD
                                                MOV     SCON,#01011010B ; Init Serial Interface
                                L16:            CLR     RI
                                                JNB     RI,$
                                                MOV     A,SBUF
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    12

                                                CJNE    A,#011H,L16
                                ELSE                                    ; fixed baudrate
                                IF (CPU_X2 = 1)
                                DIVFACTOR       EQU     BAUDRATE*16
                                ELSE
                                DIVFACTOR       EQU     BAUDRATE*32
                                ENDIF
                                BDREL           EQU     10000H-((CPU_CLOCK+(DIVFACTOR/2))/DIVFACTOR)
                                
                                                MOV     BRL,#LOW(BDREL)
                                                ORL     PCON,#080H      ; set SMOD1 to double baudrate
                                                MOV     BDRCON,#01EH    ; set TBCK/RBCK/BRR/SPD
                                                MOV     SCON,#01011010B ; Init Serial Interface
                                ENDIF
                                                MOV     AUXR,#_AUXR     ; Configure T89C51RC2
                                                JMP     Mon51
                                ENDIF
                        734     
                        735     
                        736     
                        737     IF (SERIAL = 3)
                                ;********************************************************************
                                ;*  Using external UART 16450/16550                                 *
                                ;********************************************************************
                                
                                DIVFACTOR       EQU     BAUDRATE*16
                                BAUDDIV         EQU     (EX_UART_CLK+(DIVFACTOR/2))/DIVFACTOR
                                
                                InitSerial:
                                                MOV     DPTR,#EX_UART_ADR+3
                                                MOV     A,#83H          ; Select Baudrate Registers
                                                MOVX    @DPTR,A
                                                MOV     DPTR,#EX_UART_ADR
                                                MOV     A,#LOW (BAUDDIV)
                                                MOVX    @DPTR,A
                                                INC     DPTR
                                                MOV     A,#HIGH (BAUDDIV)
                                                MOVX    @DPTR,A
                                                MOV     DPTR,#EX_UART_ADR+3
                                                MOV     A,#03H          ; Mode: 8-bit, 1 stop, no parity
                                                MOVX    @DPTR,A
                                                MOV     DPTR,#EX_UART_ADR+1
                                                CLR     A
                                                MOVX    @DPTR,A         ; disable all interrupts
                                                MOV     DPTR,#EX_UART_ADR+4
                                                MOVX    @DPTR,A
                                                MOV     AUXR,#_AUXR     ; Configure T89C51RC2
                                                MOV     P1,#01H
                                
                                                JMP     Mon51
                                ENDIF
                        768     
                        769     IF (SERIAL = 3)
                                ;********************************************************************
                                ;*  Interface via external UART 16450/16550                         *
                                ;********************************************************************
                                SER_INT_ADR     EQU     000H            ; ADDRESS OF SERIAL INTERRUPT VECTOR.
                                                                        ; Set to 0 for no interrupt
                                
                                INSTAT:         PUSH    DPL             ; INPUT STATUS OF SERIAL INTERFACE
                                                PUSH    DPH
                                                PUSH    ACC
                                                MOV     DPTR,#EX_UART_ADR+5 ; LSR
                                                MOVX    A,@DPTR         ; Check if Ready
                                                MOV     C,ACC.0
                                                POP     ACC        
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    13

                                                POP     DPH        
                                                POP     DPL        
                                                RET
                                
                                OUTSTAT:        PUSH    DPL             ; OUTPUT STATUS OF SERIAL INTERFACE
                                                PUSH    DPH
                                                PUSH    ACC
                                                MOV     DPTR,#EX_UART_ADR+5 ; LSR
                                                MOVX    A,@DPTR         ; Check if Ready
                                                MOV     C,ACC.5
                                                POP     ACC
                                                POP     DPH
                                                POP     DPL
                                                RET
                                
                                INCHAR:         PUSH    DPL             ; CHARACTER INPUT-ROUTINE
                                                PUSH    DPH
                                                MOV     DPTR,#EX_UART_ADR
                                                MOVX    A,@DPTR
                                                ORL     P1,#02H
                                                POP     DPH        
                                                POP     DPL        
                                                RET
                                
                                OUTCHAR:        PUSH    DPL             ; CHARACTER OUTPUT-ROUTINE
                                                PUSH    DPH
                                                MOV     DPTR,#EX_UART_ADR
                                                MOVX    @DPTR,A
                                                ORL     P1,#04H
                                                POP     DPH
                                                POP     DPL
                                                RET
                                
                                CLR_TI:                                 ; CLEAR SERIAL TRANSMIT INTERRUPT FLAG
                                                RET
                                
                                SET_TI:                                 ; SET SERIAL TRANSMIT INTERRUPT FLAG
                                                RET
                                
                                CLR_RI:                                 ; CLEAR SERIAL RECEIVE INTERRUPT FLAG
                                                RET
                                
                                CLR_SER_IE:                             ; CLEAR SERIAL INTERRUPT ENABLE FLAG
                                                RET
                                
                                SET_SER_IE:                             ; SET SERIAL INTERRUPT ENABLE FLAG
                                                RET
                                
                                ELSE 
                        832     
                        833     ;********************************************************************
                        834     ;*  Interface via standard 8051 UART                                *
                        835     ;********************************************************************
 0023                   836     SER_INT_ADR     EQU     23H             ; ADDRESS OF SERIAL INTERRUPT VECTOR
                        837     
000070 A298             838     INSTAT:         MOV     C,RI            ; INPUT STATUS OF SERIAL INTERFACE
000072 22               839                     RET
                        840     
000073 A299             841     OUTSTAT:        MOV     C,TI            ; OUTPUT STATUS OF SERIAL INTERFACE
000075 22               842                     RET
                        843     
000076 E599             844     INCHAR:         MOV     A,SBUF          ; CHARACTER INPUT-ROUTINE
000078 22               845                     RET
                        846     
000079 F599             847     OUTCHAR:        MOV     SBUF,A          ; CHARACTER OUTPUT-ROUTINE
00007B 22               848                     RET
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    14

                        849     
00007C C299             850     CLR_TI:         CLR     TI              ; CLEAR SERIAL TRANSMIT INTERRUPT FLAG
00007E 22               851                     RET
                        852     
00007F D299             853     SET_TI:         SETB    TI              ; SET SERIAL TRANSMIT INTERRUPT FLAG
000081 22               854                     RET
                        855     
000082 C298             856     CLR_RI:         CLR     RI              ; CLEAR SERIAL RECEIVE INTERRUPT FLAG
000084 22               857                     RET
                        858     
000085 C2AC             859     CLR_SER_IE:     CLR     ES              ; CLEAR SERIAL INTERRUPT ENABLE FLAG
000087 22               860                     RET
                        861     
000088 D2AC             862     SET_SER_IE:     SETB    ES              ; SET SERIAL INTERRUPT ENABLE FLAG
00008A 22               863                     RET
                        864     ENDIF
                        865     
                        866     
                        867     
00008B                  868     BEFORE_GO:                              ; this code is executed before a
00008B 22               869                     RET                     ; a go or proc step is executed
                        870     
00008C                  871     AFTER_GO:                               ; this code is executed after a go
00008C 22               872                     RET                     ; command (when a breakpoint was set)
                        873     
                        874     
                        875     IF (FLASH_PAGESIZE <> 0)
                        876     ;*********************************************************************
                        877     ;*  Flash programming functions for ATMEL T89C51RB2/RC2/CC01 devices *
                        878     ;*********************************************************************
 0001                   879     FBUSY_MSK       EQU 001h
 0006                   880     FMOD_MSK        EQU 006h
 0008                   881     FPS_MSK         EQU 008h
 00F0                   882     FPL_MSK         EQU 0F0h
 0000                   883     FMOD_USER_MSK   EQU 000h
 0002                   884     FMOD_XROW_MSK   EQU 002h
 0004                   885     FMOD_FUSE_MSK   EQU 004h
 0008                   886     SEL_USER_CL     EQU 008h
 0050                   887     FPL_S0          EQU 050h
 00A0                   888     FPL_S1          EQU 0A0h
                        889     
                        890     
00008D 75D108           891     PRE_PROG:       MOV     FCON,#SEL_USER_CL ; prepare flash for programming
000090 22               892                     RET
                        893     
000091 F0               894     LD_FPAGE:       MOVX    @DPTR,A           ; load data into flash page for programming
                        895                     ;NOP                       ; Necessary to secure load sequence from FM0 
                               (Read after load work-around)
000092 D3               896                     SETB    C                 ; set C flag to suppress immediate code verify
000093 22               897                     RET
                        898     
000094                  899     POST_PROG:                                ; Finish Flash programming
000094 43A220           900                     ORL     AUXR1,#20h        ; MAP boot memory
                        901                     ;NOP
000097 12FFF3           902                     LCALL   0FFF3H            ; Special entry point in the bootloader for fl
                               ash write sequence write 
                        903                     ;NOP
00009A 53A2DF           904                     ANL     AUXR1,#0DFh       ; UNMAP BOOT MEMORY
00009D 22               905                     RET
                        906     
00009E                  907     WR_CODE:                
00009E 75D108           908                     MOV     FCON,#SEL_USER_CL ; map col latch
0000A1 F0               909                     MOVX    @DPTR,A           ; Load a byte in CL space (up to 128bytes in t
                               he same page can be loaded)
                        910                     ;NOP                       ; Necessary to secure load sequence from FM0 
                               (Read after load work-arround)
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    15

0000A2 43A220           911                     ORL     AUXR1,#20h        ; MAP boot memory
0000A5 C0E0             912                     PUSH    ACC
0000A7 12FFF3           913                     LCALL   0FFF3H            ; Special entry point in the bootloader for fl
                               ash write sequence write 
0000AA D0E0             914                     POP     ACC
0000AC 53A2DF           915                     ANL     AUXR1,#0DFh       ; UNMAP BOOT MEMORY
0000AF 22               916                     RET                     
                        917     
                        918     ELSE
                                
                                ; Dummy flash functions when application is loaded into v.Neumann RAM
                                PRE_PROG:       RET                       ; prepare flash for programming
                                
                                LD_FPAGE:       MOVX    @DPTR,A           ; write one byte into v.Neumann wired RAM
                                                CLR     C                 ; clear C flag to force immediate code verific
                               ation
                                                RET
                                
                                POST_PROG:      RET                       ; Finish Flash programming
                                
                                
                                WR_CODE:        MOVX    @DPTR,A           ; write one byte into v.Neumann wired RAM
                                                RET                     
                                ENDIF
                        933     
                        934     
                        935     
 0023                   936     SER_INT_ADR_OFF EQU (INT_ADR_OFF + SER_INT_ADR)
                        937     
000600                  938     XDATA_BEGIN     SEGMENT XDATA AT XDATA_START
------                  939                     RSEG    XDATA_BEGIN
000600                  940     XDATA_START_ADR:DS     1 ; define one dummy byte
                        941     
                        942     IF (FLASH_PAGESIZE <> 0)
------                  943     CODE_AREA       SEGMENT CODE
------                  944                     RSEG    CODE_AREA
                        945     ELSE
                                XDATA_AREA      SEGMENT XDATA
                                                RSEG    XDATA_AREA
                                ENDIF
000000                  949     EXECBUFF:       DS      9
                        950     
                        951                     END
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    16

SYMBOL TABLE LISTING
------ ----- -------


N A M E                      T Y P E  V A L U E     ATTRIBUTES

_AO . . . . . . . . . . . .  HC ADDR  0001H     A   
_AUXR . . . . . . . . . . .  HC ADDR  0011H     A   
_EXTRAM . . . . . . . . . .  HC ADDR  0000H     A   
_M0 . . . . . . . . . . . .  HC ADDR  0000H     A   
_XRS. . . . . . . . . . . .  HC ADDR  0004H     A   
AC. . . . . . . . . . . . .  B  ADDR  00D0H.6   A   
ACC . . . . . . . . . . . .  D  ADDR  00E0H     A   
AFTER_GO. . . . . . . . . .  C  ADDR  008CH     R   SEG=INSTALLCODE
AUXR. . . . . . . . . . . .  D  ADDR  008EH     A   
AUXR1 . . . . . . . . . . .  D  ADDR  00A2H     A   
B . . . . . . . . . . . . .  D  ADDR  00F0H     A   
BAUDRATE. . . . . . . . . .  HC ADDR  0000H     A   
BDRCON. . . . . . . . . . .  D  ADDR  009BH     A   
BDRCON_1. . . . . . . . . .  D  ADDR  009CH     A   
BEFORE_GO . . . . . . . . .  C  ADDR  008BH     R   SEG=INSTALLCODE
BRL . . . . . . . . . . . .  D  ADDR  009AH     A   
CCAP0H. . . . . . . . . . .  D  ADDR  00FAH     A   
CCAP0L. . . . . . . . . . .  D  ADDR  00EAH     A   
CCAP1H. . . . . . . . . . .  D  ADDR  00FBH     A   
CCAP1L. . . . . . . . . . .  D  ADDR  00EBH     A   
CCAP2H. . . . . . . . . . .  D  ADDR  00FCH     A   
CCAP2L. . . . . . . . . . .  D  ADDR  00ECH     A   
CCAP3H. . . . . . . . . . .  D  ADDR  00FDH     A   
CCAP3L. . . . . . . . . . .  D  ADDR  00EDH     A   
CCAP4H. . . . . . . . . . .  D  ADDR  00FEH     A   
CCAP4L. . . . . . . . . . .  D  ADDR  00EEH     A   
CCAPM0. . . . . . . . . . .  D  ADDR  00DAH     A   
CCAPM1. . . . . . . . . . .  D  ADDR  00DBH     A   
CCAPM2. . . . . . . . . . .  D  ADDR  00DCH     A   
CCAPM3. . . . . . . . . . .  D  ADDR  00DDH     A   
CCAPM4. . . . . . . . . . .  D  ADDR  00DEH     A   
CCF0. . . . . . . . . . . .  B  ADDR  00D8H.0   A   
CCF1. . . . . . . . . . . .  B  ADDR  00D8H.1   A   
CCF2. . . . . . . . . . . .  B  ADDR  00D8H.2   A   
CCF3. . . . . . . . . . . .  B  ADDR  00D8H.3   A   
CCF4. . . . . . . . . . . .  B  ADDR  00D8H.4   A   
CCON. . . . . . . . . . . .  D  ADDR  00D8H     A   
CEX0. . . . . . . . . . . .  B  ADDR  0090H.3   A   
CEX1. . . . . . . . . . . .  B  ADDR  0090H.4   A   
CEX2. . . . . . . . . . . .  B  ADDR  0090H.5   A   
CEX3. . . . . . . . . . . .  B  ADDR  0090H.6   A   
CEX4. . . . . . . . . . . .  B  ADDR  0090H.7   A   
CF. . . . . . . . . . . . .  B  ADDR  00D8H.7   A   
CH. . . . . . . . . . . . .  D  ADDR  00F9H     A   
CKCON . . . . . . . . . . .  D  ADDR  008FH     A   
CKSEL . . . . . . . . . . .  D  ADDR  0085H     A   
CL. . . . . . . . . . . . .  D  ADDR  00E9H     A   
CLR_RI. . . . . . . . . . .  C  ADDR  0082H     R   SEG=INSTALLCODE
CLR_SER_IE. . . . . . . . .  C  ADDR  0085H     R   SEG=INSTALLCODE
CLR_TI. . . . . . . . . . .  C  ADDR  007CH     R   SEG=INSTALLCODE
CMOD. . . . . . . . . . . .  D  ADDR  00D9H     A   
CODE_AREA . . . . . . . . .  C  SEG   000009H       REL=UNIT, ALN=BYTE
CODE_START. . . . . . . . .  HC ADDR  E000H     A   
CODE_START_ADR. . . . . . .  C  ADDR  E000H     R   SEG=INITSEG
CONFIG. . . . . . . . . . .  -- ----  -------       
CPRL2 . . . . . . . . . . .  B  ADDR  00C8H.0   A   
CPU_CLOCK . . . . . . . . .  HC ADDR  016E3600H A   
CPU_X2. . . . . . . . . . .  HC ADDR  0000H     A   
CR. . . . . . . . . . . . .  B  ADDR  00D8H.6   A   
CT2 . . . . . . . . . . . .  B  ADDR  00C8H.1   A   
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    17

CY. . . . . . . . . . . . .  B  ADDR  00D0H.7   A   
DEF_PC_VAL. . . . . . . . .  HC ADDR  0000H     A   
DPH . . . . . . . . . . . .  D  ADDR  0083H     A   
DPL . . . . . . . . . . . .  D  ADDR  0082H     A   
EA. . . . . . . . . . . . .  B  ADDR  00A8H.7   A   
EC. . . . . . . . . . . . .  B  ADDR  00A8H.6   A   
ECI . . . . . . . . . . . .  B  ADDR  0090H.2   A   
EECON . . . . . . . . . . .  D  ADDR  00D2H     A   
EETIM . . . . . . . . . . .  D  ADDR  00D3H     A   
ES. . . . . . . . . . . . .  B  ADDR  00A8H.4   A   
ET0 . . . . . . . . . . . .  B  ADDR  00A8H.1   A   
ET1 . . . . . . . . . . . .  B  ADDR  00A8H.3   A   
ET2 . . . . . . . . . . . .  B  ADDR  00A8H.5   A   
EX0 . . . . . . . . . . . .  B  ADDR  00A8H.0   A   
EX1 . . . . . . . . . . . .  B  ADDR  00A8H.2   A   
EX_UART_ADR . . . . . . . .  HC ADDR  E700H     A   
EX_UART_CLK . . . . . . . .  HC ADDR  001C2000H A   
EXECBUFF. . . . . . . . . .  C  ADDR  0000H     R   SEG=CODE_AREA
EXEN2 . . . . . . . . . . .  B  ADDR  00C8H.3   A   
EXF2. . . . . . . . . . . .  B  ADDR  00C8H.6   A   
F0. . . . . . . . . . . . .  B  ADDR  00D0H.5   A   
FBUSY_MSK . . . . . . . . .  HC ADDR  0001H     A   
FCON. . . . . . . . . . . .  D  ADDR  00D1H     A   
FE. . . . . . . . . . . . .  B  ADDR  0098H.7   A   
FLASH_MAXBYTES. . . . . . .  HC ADDR  0080H     A   
FLASH_PAGESIZE. . . . . . .  HC ADDR  0080H     A   
FMOD_FUSE_MSK . . . . . . .  HC ADDR  0004H     A   
FMOD_MSK. . . . . . . . . .  HC ADDR  0006H     A   
FMOD_USER_MSK . . . . . . .  HC ADDR  0000H     A   
FMOD_XROW_MSK . . . . . . .  HC ADDR  0002H     A   
FPL_MSK . . . . . . . . . .  HC ADDR  00F0H     A   
FPL_S0. . . . . . . . . . .  HC ADDR  0050H     A   
FPL_S1. . . . . . . . . . .  HC ADDR  00A0H     A   
FPS_MSK . . . . . . . . . .  HC ADDR  0008H     A   
ICON. . . . . . . . . . . .  D  ADDR  00FFH     A   
IE. . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0 . . . . . . . . . . . .  D  ADDR  00A8H     A   
IE0_. . . . . . . . . . . .  B  ADDR  0088H.1   A   
IE1_. . . . . . . . . . . .  B  ADDR  0088H.3   A   
INCHAR. . . . . . . . . . .  C  ADDR  0076H     R   SEG=INSTALLCODE
INITSEG . . . . . . . . . .  C  SEG   00E003H       REL=ABS, ALN=BYTE
INITSERIAL. . . . . . . . .  C  ADDR  0000H     R   SEG=INSTALLCODE
INSTALLCODE . . . . . . . .  C  SEG   0000B0H       REL=UNIT, ALN=BYTE
INSTAT. . . . . . . . . . .  C  ADDR  0070H     R   SEG=INSTALLCODE
INT0. . . . . . . . . . . .  B  ADDR  00B0H.2   A   
INT1. . . . . . . . . . . .  B  ADDR  00B0H.3   A   
INT_ADR_OFF . . . . . . . .  HC ADDR  0000H     A   
IPH . . . . . . . . . . . .  D  ADDR  00B7H     A   
IPH0. . . . . . . . . . . .  D  ADDR  00B7H     A   
IPL . . . . . . . . . . . .  D  ADDR  00B8H     A   
IPL0. . . . . . . . . . . .  D  ADDR  00B8H     A   
IT0 . . . . . . . . . . . .  B  ADDR  0088H.0   A   
IT1 . . . . . . . . . . . .  B  ADDR  0088H.2   A   
L10 . . . . . . . . . . . .  C  ADDR  001BH     R   SEG=INSTALLCODE
L12 . . . . . . . . . . . .  C  ADDR  001EH     R   SEG=INSTALLCODE
L14 . . . . . . . . . . . .  C  ADDR  0024H     R   SEG=INSTALLCODE
L15 . . . . . . . . . . . .  C  ADDR  0027H     R   SEG=INSTALLCODE
L16 . . . . . . . . . . . .  C  ADDR  0060H     R   SEG=INSTALLCODE
L22 . . . . . . . . . . . .  C  ADDR  0045H     R   SEG=INSTALLCODE
L4. . . . . . . . . . . . .  C  ADDR  000DH     R   SEG=INSTALLCODE
L6. . . . . . . . . . . . .  C  ADDR  0010H     R   SEG=INSTALLCODE
L7. . . . . . . . . . . . .  C  ADDR  0013H     R   SEG=INSTALLCODE
L8. . . . . . . . . . . . .  C  ADDR  0015H     R   SEG=INSTALLCODE
LD_FPAGE. . . . . . . . . .  C  ADDR  0091H     R   SEG=INSTALLCODE
MON51 . . . . . . . . . . .  C  ADDR  -------       EXT
OSCCON. . . . . . . . . . .  D  ADDR  0086H     A   
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    18

OUTCHAR . . . . . . . . . .  C  ADDR  0079H     R   SEG=INSTALLCODE
OUTSTAT . . . . . . . . . .  C  ADDR  0073H     R   SEG=INSTALLCODE
OV. . . . . . . . . . . . .  B  ADDR  00D0H.2   A   
P . . . . . . . . . . . . .  B  ADDR  00D0H.0   A   
P0. . . . . . . . . . . . .  D  ADDR  0080H     A   
P0_0. . . . . . . . . . . .  B  ADDR  0080H.0   A   
P0_1. . . . . . . . . . . .  B  ADDR  0080H.1   A   
P0_2. . . . . . . . . . . .  B  ADDR  0080H.2   A   
P0_3. . . . . . . . . . . .  B  ADDR  0080H.3   A   
P0_4. . . . . . . . . . . .  B  ADDR  0080H.4   A   
P0_5. . . . . . . . . . . .  B  ADDR  0080H.5   A   
P0_6. . . . . . . . . . . .  B  ADDR  0080H.6   A   
P0_7. . . . . . . . . . . .  B  ADDR  0080H.7   A   
P1. . . . . . . . . . . . .  D  ADDR  0090H     A   
P1_0. . . . . . . . . . . .  B  ADDR  0090H.0   A   
P1_1. . . . . . . . . . . .  B  ADDR  0090H.1   A   
P1_2. . . . . . . . . . . .  B  ADDR  0090H.2   A   
P1_3. . . . . . . . . . . .  B  ADDR  0090H.3   A   
P1_4. . . . . . . . . . . .  B  ADDR  0090H.4   A   
P1_5. . . . . . . . . . . .  B  ADDR  0090H.5   A   
P1_6. . . . . . . . . . . .  B  ADDR  0090H.6   A   
P1_7. . . . . . . . . . . .  B  ADDR  0090H.7   A   
P2. . . . . . . . . . . . .  D  ADDR  00A0H     A   
P2_0. . . . . . . . . . . .  B  ADDR  00A0H.0   A   
P2_1. . . . . . . . . . . .  B  ADDR  00A0H.1   A   
P2_2. . . . . . . . . . . .  B  ADDR  00A0H.2   A   
P2_3. . . . . . . . . . . .  B  ADDR  00A0H.3   A   
P2_4. . . . . . . . . . . .  B  ADDR  00A0H.4   A   
P2_5. . . . . . . . . . . .  B  ADDR  00A0H.5   A   
P2_6. . . . . . . . . . . .  B  ADDR  00A0H.6   A   
P2_7. . . . . . . . . . . .  B  ADDR  00A0H.7   A   
P3. . . . . . . . . . . . .  D  ADDR  00B0H     A   
P3_0. . . . . . . . . . . .  B  ADDR  00B0H.0   A   
P3_1. . . . . . . . . . . .  B  ADDR  00B0H.1   A   
P3_2. . . . . . . . . . . .  B  ADDR  00B0H.2   A   
P3_3. . . . . . . . . . . .  B  ADDR  00B0H.3   A   
P3_4. . . . . . . . . . . .  B  ADDR  00B0H.4   A   
P3_5. . . . . . . . . . . .  B  ADDR  00B0H.5   A   
P3_6. . . . . . . . . . . .  B  ADDR  00B0H.6   A   
P3_7. . . . . . . . . . . .  B  ADDR  00B0H.7   A   
PCON. . . . . . . . . . . .  D  ADDR  0087H     A   
POST_PROG . . . . . . . . .  C  ADDR  0094H     R   SEG=INSTALLCODE
PPC . . . . . . . . . . . .  B  ADDR  00B8H.6   A   
PRE_PROG. . . . . . . . . .  C  ADDR  008DH     R   SEG=INSTALLCODE
PS. . . . . . . . . . . . .  B  ADDR  00B8H.4   A   
PSW . . . . . . . . . . . .  D  ADDR  00D0H     A   
PT0 . . . . . . . . . . . .  B  ADDR  00B8H.1   A   
PT1 . . . . . . . . . . . .  B  ADDR  00B8H.3   A   
PT2 . . . . . . . . . . . .  B  ADDR  00B8H.5   A   
PX0 . . . . . . . . . . . .  B  ADDR  00B8H.0   A   
PX1 . . . . . . . . . . . .  B  ADDR  00B8H.2   A   
RB8 . . . . . . . . . . . .  B  ADDR  0098H.2   A   
RCAP2H. . . . . . . . . . .  D  ADDR  00CBH     A   
RCAP2L. . . . . . . . . . .  D  ADDR  00CAH     A   
RCLK. . . . . . . . . . . .  B  ADDR  00C8H.5   A   
RD. . . . . . . . . . . . .  B  ADDR  00B0H.7   A   
REN . . . . . . . . . . . .  B  ADDR  0098H.4   A   
RI. . . . . . . . . . . . .  B  ADDR  0098H.0   A   
RS0 . . . . . . . . . . . .  B  ADDR  00D0H.3   A   
RS1 . . . . . . . . . . . .  B  ADDR  00D0H.4   A   
RXD . . . . . . . . . . . .  B  ADDR  00B0H.0   A   
SADDR . . . . . . . . . . .  D  ADDR  00A9H     A   
SADDR_1 . . . . . . . . . .  D  ADDR  00AAH     A   
SADEN . . . . . . . . . . .  D  ADDR  00B9H     A   
SADEN_1 . . . . . . . . . .  D  ADDR  00BAH     A   
SBUF. . . . . . . . . . . .  D  ADDR  0099H     A   
AX51 MACRO ASSEMBLER  Configuration for MONITOR-51   (C) 1987-2003 KEIL                     14/07/04 10:44:03 PAGE    19

SBUF_1. . . . . . . . . . .  D  ADDR  00C1H     A   
SCON. . . . . . . . . . . .  D  ADDR  0098H     A   
SCON_1. . . . . . . . . . .  D  ADDR  00C0H     A   
SEL_USER_CL . . . . . . . .  HC ADDR  0008H     A   
SER_INT_ADR . . . . . . . .  HC ADDR  0023H     A   
SER_INT_ADR_OFF . . . . . .  HC ADDR  0023H     A   
SER_ISR . . . . . . . . . .  C  ADDR  -------       EXT
SERIAL. . . . . . . . . . .  HC ADDR  0001H     A   
SET_SER_IE. . . . . . . . .  C  ADDR  0088H     R   SEG=INSTALLCODE
SET_TI. . . . . . . . . . .  C  ADDR  007FH     R   SEG=INSTALLCODE
SM0 . . . . . . . . . . . .  B  ADDR  0098H.7   A   
SM1 . . . . . . . . . . . .  B  ADDR  0098H.6   A   
SM2 . . . . . . . . . . . .  B  ADDR  0098H.5   A   
SP. . . . . . . . . . . . .  D  ADDR  0081H     A   
T0. . . . . . . . . . . . .  B  ADDR  00B0H.4   A   
T1. . . . . . . . . . . . .  B  ADDR  00B0H.5   A   
T2. . . . . . . . . . . . .  B  ADDR  0090H.0   A   
T2CON . . . . . . . . . . .  D  ADDR  00C8H     A   
T2EX. . . . . . . . . . . .  B  ADDR  0090H.1   A   
T2MOD . . . . . . . . . . .  D  ADDR  00C9H     A   
TB8 . . . . . . . . . . . .  B  ADDR  0098H.3   A   
TCLK. . . . . . . . . . . .  B  ADDR  00C8H.4   A   
TCON. . . . . . . . . . . .  D  ADDR  0088H     A   
TF0 . . . . . . . . . . . .  B  ADDR  0088H.5   A   
TF1 . . . . . . . . . . . .  B  ADDR  0088H.7   A   
TF2 . . . . . . . . . . . .  B  ADDR  00C8H.7   A   
TH0 . . . . . . . . . . . .  D  ADDR  008CH     A   
TH1 . . . . . . . . . . . .  D  ADDR  008DH     A   
TH2 . . . . . . . . . . . .  D  ADDR  00CDH     A   
TI. . . . . . . . . . . . .  B  ADDR  0098H.1   A   
TL0 . . . . . . . . . . . .  D  ADDR  008AH     A   
TL1 . . . . . . . . . . . .  D  ADDR  008BH     A   
TL2 . . . . . . . . . . . .  D  ADDR  00CCH     A   
TMOD. . . . . . . . . . . .  D  ADDR  0089H     A   
TR0 . . . . . . . . . . . .  B  ADDR  0088H.4   A   
TR1 . . . . . . . . . . . .  B  ADDR  0088H.6   A   
TR2 . . . . . . . . . . . .  B  ADDR  00C8H.2   A   
TXD . . . . . . . . . . . .  B  ADDR  00B0H.1   A   
UD. . . . . . . . . . . . .  B  ADDR  00D0H.1   A   
WDTPRG. . . . . . . . . . .  D  ADDR  00A7H     A   
WDTRST. . . . . . . . . . .  D  ADDR  00A6H     A   
WR. . . . . . . . . . . . .  B  ADDR  00B0H.6   A   
WR_CODE . . . . . . . . . .  C  ADDR  009EH     R   SEG=INSTALLCODE
XDATA_BEGIN . . . . . . . .  X  SEG   000601H       REL=ABS, ALN=BYTE
XDATA_START . . . . . . . .  HC ADDR  0600H     A   
XDATA_START_ADR . . . . . .  X  ADDR  0600H     R   SEG=XDATA_BEGIN


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S).
